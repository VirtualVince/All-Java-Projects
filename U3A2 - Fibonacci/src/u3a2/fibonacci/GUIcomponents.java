/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package u3a2.fibonacci;

import java.awt.Color;

public class GUIcomponents extends javax.swing.JFrame {

    /**
     * Creates new form GUIcomponents
     */
    public GUIcomponents() {
        initComponents();
        setBackground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlelbl = new javax.swing.JLabel();
        fibinfobtn = new javax.swing.JButton();
        fibcalbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        inputfield = new javax.swing.JTextField();
        clearbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputarea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titlelbl.setBackground(javax.swing.UIManager.getDefaults().getColor("EditorTab.attentionBackground"));
        titlelbl.setFont(new java.awt.Font("Yu Gothic UI Semibold", 3, 18)); // NOI18N
        titlelbl.setText("FIBONACCI GAME");
        titlelbl.setToolTipText("");
        titlelbl.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        titlelbl.setCursor(new java.awt.Cursor(java.awt.Cursor.NE_RESIZE_CURSOR));
        titlelbl.setFocusTraversalPolicyProvider(true);

        fibinfobtn.setText("Fibonacci?");
        fibinfobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fibinfobtnActionPerformed(evt);
            }
        });

        fibcalbtn.setText("Find out");
        fibcalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fibcalbtnActionPerformed(evt);
            }
        });

        exitbtn.setText("Exit");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });

        clearbtn.setText("Clear");
        clearbtn.setActionCommand("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        outputarea.setColumns(20);
        outputarea.setRows(5);
        jScrollPane1.setViewportView(outputarea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputfield)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(fibinfobtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fibcalbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(clearbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputfield, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fibcalbtn)
                            .addComponent(fibinfobtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitbtn)
                            .addComponent(clearbtn)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fibinfobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fibinfobtnActionPerformed
        outputarea.setText("The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding numbers. "
                + "It starts with 0 and 1, and then each subsequent number is the sum of the two numbers before it ");
        outputarea.setLineWrap(true); //   tells the text area to wrap lines if they are too long to fit in the available space
        outputarea.setWrapStyleWord(true); // tells the text area to wrap the text at word boundaries, so that words are not split between lines.
    }//GEN-LAST:event_fibinfobtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        System.exit(0); // Exit the application       
    }//GEN-LAST:event_exitbtnActionPerformed

    private void fibcalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fibcalbtnActionPerformed
        outputarea.setText("");
        // Get input from input field
        String input = inputfield.getText().trim();

        // Check if the input is a valid integer
        if (!input.matches("\\d+")) {
            outputarea.setText("Please enter a valid number.");
        } else {
            int terms = Integer.parseInt(input);
            if (terms <= 0) {
                outputarea.setText("Please enter a positive integer.");
            } else {
                // Calculate and display Fibonacci sequence
                StringBuilder sequence = new StringBuilder("Fibonacci sequence:\n");
                for (int i = 0; i < terms; i++) {
                    sequence.append(fibonacci(i)).append("\n");
                }
                outputarea.setText(sequence.toString());
            }
        }
    }
// Calculates the 'n'th number in the Fibonacci sequence

    private int fibonacci(int n) {
        if (n <= 1) {
            return n;
        } else {
            return fibonacci(n - 1) + fibonacci(n - 2);
        }
    }//GEN-LAST:event_fibcalbtnActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        inputfield.setText(""); // Clear previous input area text
        outputarea.setText(""); // Clear previous output area text
    }//GEN-LAST:event_clearbtnActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIcomponents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIcomponents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIcomponents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIcomponents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUIcomponents().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton exitbtn;
    private javax.swing.JButton fibcalbtn;
    private javax.swing.JButton fibinfobtn;
    private javax.swing.JTextField inputfield;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputarea;
    private javax.swing.JLabel titlelbl;
    // End of variables declaration//GEN-END:variables

    private void outputbox(String the_Fibonacci_sequence_is_a_series_of_num) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
